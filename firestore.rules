rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'administrator';
    }
    
    function isMediator() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'mediator';
    }
    
    function isCaseParticipant(caseId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/cases/$(caseId)) &&
             request.auth.uid in get(/databases/$(database)/documents/cases/$(caseId)).data.participants;
    }
    
    function isCaseMediator(caseId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/cases/$(caseId)) &&
             request.auth.uid == get(/databases/$(database)/documents/cases/$(caseId)).data.mediatorId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    // Cases collection
    match /cases/{caseId} {
      allow read: if isAdmin() || isCaseParticipant(caseId) || isCaseMediator(caseId);
      allow create: if isMediator() || isAdmin();
      allow update: if isAdmin() || isCaseMediator(caseId);
      allow delete: if isAdmin() || isCaseMediator(caseId);
    }

    // Polls collection
    match /polls/{pollId} {
      allow read: if true; // Public polls can be read by anyone
      allow create: if isMediator() || isAdmin();
      allow update: if isAdmin() || 
                       (exists(/databases/$(database)/documents/polls/$(pollId)) &&
                        request.auth.uid == get(/databases/$(database)/documents/polls/$(pollId)).data.createdBy);
      allow delete: if isAdmin() || 
                       (exists(/databases/$(database)/documents/polls/$(pollId)) &&
                        request.auth.uid == get(/databases/$(database)/documents/polls/$(pollId)).data.createdBy);
    }

    // Poll votes collection
    match /polls/{pollId}/votes/{voteId} {
      allow read: if true; // Public voting
      allow create: if true; // Public voting
      allow update: if true; // Allow vote updates
      allow delete: if isAdmin();
    }

    // Mediation notices collection
    match /notices/{noticeId} {
      allow read: if isAdmin() || 
                     (exists(/databases/$(database)/documents/notices/$(noticeId)) &&
                      isCaseMediator(get(/databases/$(database)/documents/notices/$(noticeId)).data.caseId));
      allow create: if isMediator() || isAdmin();
      allow update: if isAdmin() || 
                       (exists(/databases/$(database)/documents/notices/$(noticeId)) &&
                        request.auth.uid == get(/databases/$(database)/documents/notices/$(noticeId)).data.createdBy);
      allow delete: if isAdmin() || 
                       (exists(/databases/$(database)/documents/notices/$(noticeId)) &&
                        request.auth.uid == get(/databases/$(database)/documents/notices/$(noticeId)).data.createdBy);
    }

    // Email tracking collection
    match /emailTracking/{trackingId} {
      allow read: if isAdmin() || isMediator();
      allow create: if true; // System creates tracking records
      allow update: if true; // System updates tracking records
      allow delete: if isAdmin();
    }

    // System configuration (admin only)
    match /config/{configId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}